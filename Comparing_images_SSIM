# import the necessary packages
from skimage.measure import compare_ssim as ssim
import matplotlib.pyplot as plt
import numpy as np
import cv2
#from skimage import data, img_as_float


original = cv2.imread(r'\image_processing\clean_panel.png',)
dusty = cv2.imread(r"\image_processing\dusty_panel.png")
l_dusty = cv2.imread(r"\image_processing\little_dusty.jfif")

original = cv2.cvtColor(original, cv2.COLOR_BGR2GRAY)
dusty = cv2.cvtColor(dusty, cv2.COLOR_BGR2GRAY)
l_dusty = cv2.cvtColor(l_dusty, cv2.COLOR_BGR2GRAY)

original = cv2.resize(original,(363,526))
dusty = cv2.resize(dusty,(363,526))
l_dusty = cv2.resize(l_dusty,(363,526))

rows, cols = original.shape


noise = np.ones_like(original) * 0.2 * (original.max() - original.min())
noise[np.random.random(size=noise.shape) > 0.5] *= -1

def mse(x, y):
    return np.linalg.norm(x - y)

img_noise = original + noise
img_const = original + abs(noise)

fig, axes = plt.subplots(nrows=1, ncols=3, figsize=(10, 4),
                         sharex=True, sharey=True)
ax = axes.ravel()

mse_none = mse(original, original)
ssim_none = ssim(original, original, data_range=original.max() - original.min())

mse_noise = mse(original, img_noise)
ssim_noise = ssim(original, img_noise,
                  data_range=img_noise.max() - img_noise.min())

mse_const = mse(original, img_const)
ssim_const = ssim(original, img_const,
                  data_range=img_const.max() - img_const.min())

mse_dusty = mse(original, dusty)
ssim_dusty = ssim(original, dusty,
                  data_range=dusty.max() - dusty.min())


mse_l_dusty = mse(original, l_dusty)
ssim_l_dusty = ssim(original, l_dusty,
                  data_range=l_dusty.max() - l_dusty.min())


label = 'MSE: {:.2f}, SSIM: {:.2f}'


plt.subplot(1,3,1),plt.imshow(original,cmap = 'gray')
plt.title('Original'), plt.xticks([]), plt.yticks([])
plt.xlabel(label.format(mse_none, ssim_none))
plt.subplot(1,3,2),plt.imshow(dusty,cmap = 'gray')
plt.title('img_dusty'), plt.xticks([]), plt.yticks([])
plt.xlabel(label.format(mse_dusty, ssim_dusty))
plt.subplot(1,3,3),plt.imshow(l_dusty,cmap = 'gray')
plt.title('img_little_dusty'), plt.xticks([]), plt.yticks([])
plt.xlabel(label.format(mse_l_dusty, ssim_l_dusty))


plt.subplot(1,3,1),plt.imshow(original,cmap = 'gray')
plt.title('Original'), plt.xticks([]), plt.yticks([])
plt.xlabel(label.format(mse_none, ssim_none))
plt.subplot(1,3,2),plt.imshow(img_noise,cmap = 'gray')
plt.title('img_noise'), plt.xticks([]), plt.yticks([])
plt.xlabel(label.format(mse_noise, ssim_noise))
plt.subplot(1,3,3),plt.imshow(img_const,cmap = 'gray')
plt.title('img_const'), plt.xticks([]), plt.yticks([])
plt.xlabel(label.format(mse_const, ssim_const))


